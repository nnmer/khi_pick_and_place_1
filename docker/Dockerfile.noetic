FROM ros:noetic-ros-base

RUN sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys F42ED6FBAB17C654

RUN sudo apt-get update && sudo apt-get install -y vim iputils-ping net-tools python3-pip python-is-python3 ros-noetic-robot-state-publisher ros-noetic-joint-state-publisher ros-noetic-moveit ros-noetic-rosbridge-suite ros-noetic-joy ros-noetic-ros-control ros-noetic-ros-controllers ros-noetic-tf2-web-republisher ros-noetic-tf-conversions dos2unix

RUN sudo apt-get install -y ros-noetic-rosservice

RUN sudo apt-get install -y libopenblas-dev

RUN sudo -H pip install rospkg jsonpickle pyzmq


ENV ROS_WORKSPACE=/catkin_ws

# Copy each directory explicitly to avoid workspace cruft
COPY ./ROS/devel $ROS_WORKSPACE/devel
COPY ./ROS/src/moveit_msgs $ROS_WORKSPACE/src/moveit_msgs
COPY ./ROS/src/rs007_control $ROS_WORKSPACE/src/rs007_control
COPY ./ROS/src/niryo_moveit $ROS_WORKSPACE/src/niryo_moveit
# COPY ./ROS/src/niryo_one_ros $ROS_WORKSPACE/src/niryo_one_ros
# COPY ./ROS/src/niryo_one_urdf $ROS_WORKSPACE/src/niryo_one_urdf
COPY ./ROS/src/khi_robot $ROS_WORKSPACE/src/khi_robot
COPY ./ROS/src/ros_tcp_endpoint $ROS_WORKSPACE/src/ros_tcp_endpoint

COPY ./docker/set-up-workspace-noetic /setup.sh
COPY docker/tutorial /

RUN /bin/bash -c "find $ROS_WORKSPACE -type f -print0 | xargs -0 dos2unix"

RUN dos2unix /tutorial && dos2unix /setup.sh && chmod +x /setup.sh && /setup.sh && rm /setup.sh

WORKDIR $ROS_WORKSPACE

# making sure the file modes are executable
# RUN chmod +x src/niryo_moveit/scripts/*.py
RUN chmod +x /tutorial \
  && find $ROS_WORKSPACE -name "*.py" -exec chmod +x {} \;

ENTRYPOINT ["/tutorial"]
